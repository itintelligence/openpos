package gui.dashboard;

import gui.dashboard.models.JTreeNode;
import gui.dashboard.models.JTreeCellRenderer;
import javax.swing.tree.DefaultTreeCellRenderer;
import java.awt.Dimension;
import javax.swing.tree.DefaultMutableTreeNode;
import java.awt.Toolkit;
import java.awt.Color;
import javax.swing.JInternalFrame;

/**
 *
 * @author Ashraful Islam
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
      // get screen resolution in pixels
      screenSize = new Dimension(Toolkit.getDefaultToolkit().getScreenSize());
        
      initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBody = new javax.swing.JPanel();
        pnlMenu = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        // define root node
        DefaultMutableTreeNode menu = new DefaultMutableTreeNode("Menu");

        // define sales node
        DefaultMutableTreeNode sales = new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Sales","dash_menu_sale_root.png"));
        // define sub-nodes for sales
        sales.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Sale", "dash_menu_sale_register.png")));
        sales.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Exchange", "dash_menu_sale_return.png")));

        // define stock node
        DefaultMutableTreeNode stock = new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Stock","dash_menu_buy_root.png"));
        // add sub-nodes for stock
        stock.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Order", "dash_menu_buy_restock.png")));
        stock.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Return", "dash_menu_buy_return.png")));

        // define report node
        DefaultMutableTreeNode report = new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Reports","dash_menu_rep_root.png"));
        // add sub-nodes for report
        report.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Sales", "dash_menu_rep_sale.png")));
        report.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Stock", "dash_menu_rep_stock.png")));

        // define product node
        DefaultMutableTreeNode product = new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Products","dash_menu_product_root.png"));
        // add sub-nodes for product
        product.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Products", "dash_menu_product_list.png")));
        product.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Categories", "dash_menu_product_category.png")));
        product.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Units", "dash_menu_product_unit.png")));
        product.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Price", "dash_menu_product_price.png")));

        // define records node
        DefaultMutableTreeNode record = new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Records","dash_menu_rec_root.png"));
        // add sub-nodes for records
        record.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Customers", "dash_menu_rec_customers.png")));
        record.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Employees", "dash_menu_rec_employee.png")));
        record.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Suppliers", "dash_menu_rec_supplier.png")));

        // define config node
        DefaultMutableTreeNode config = new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Settings","dash_menu_conf_root.png"));
        // add sub-nodes for config
        config.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Access", "dash_menu_conf_privilege.png")));
        config.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Offers", "dash_menu_conf_offer.png")));

        // Test node
        DefaultMutableTreeNode test = new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("Test", "dash_menu_test_root.png"));
        test.add(new DefaultMutableTreeNode(new gui.dashboard.models.JTreeNode("New Frame", "dash_menu_test_window.png")));

        // add all nodes to root-menu
        menu.add(sales);
        menu.add(stock);
        menu.add(product);
        menu.add(record);
        menu.add(report);
        menu.add(config);
        menu.add(test);

        // add root node(via constructor) to tree
        jtrMenu = new javax.swing.JTree(menu);
        jdpFormDisplay = new javax.swing.JDesktopPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Open POS . Dashboard");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(30, 170, 241));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.lightGray);
        setIconImages(null);
        setMaximumSize(new java.awt.Dimension(32767, 32767));
        setName("dashMain"); // NOI18N
        setResizable(false);

        pnlBody.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlBody.setLayout(new javax.swing.BoxLayout(pnlBody, javax.swing.BoxLayout.LINE_AXIS));

        pnlMenu.setLayout(new java.awt.GridLayout(1, 0));

        jScrollPane1.setBorder(null);

        // custom cell renderer
        JTreeCellRenderer jtcr = new JTreeCellRenderer();

        // use custom cell renderer
        jtrMenu.setCellRenderer(jtcr);

        DefaultTreeCellRenderer dtcr = (DefaultTreeCellRenderer) jtrMenu.getCellRenderer();
        dtcr.setTextSelectionColor(Color.WHITE);
        dtcr.setTextNonSelectionColor(Color.CYAN);
        jtrMenu.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 10, 10));
        jtrMenu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtrMenu.setForeground(new java.awt.Color(255, 255, 255));
        jtrMenu.setModel(jtrMenu.getModel());
        jtrMenu.setDoubleBuffered(true);
        jtrMenu.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jtrMenu.setMinimumSize(new java.awt.Dimension(128, 78));
        jtrMenu.setName("dashboard menu"); // NOI18N
        jtrMenu.setPreferredSize(new java.awt.Dimension(275, 126));
        jtrMenu.setSize((int) (pnlMenu.getWidth()*1.1),
            (int) pnlMenu.getHeight());
        jtrMenu.setPreferredSize(jtrMenu.getSize());
        jtrMenu.setRootVisible(false);
        jtrMenu.setRowHeight(32);
        jtrMenu.setToggleClickCount(1);
        jtrMenu.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jtrMenuValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jtrMenu);

        jScrollPane1.setPreferredSize(pnlMenu.getSize());

        pnlMenu.add(jScrollPane1);

        pnlMenu.setSize((int)(screenSize.getWidth()*0.20),
            (int)screenSize.getHeight());
        pnlMenu.setMinimumSize(pnlMenu.getSize());
        pnlMenu.setPreferredSize(pnlMenu.getSize());

        pnlBody.add(pnlMenu);

        jdpFormDisplay.setMaximumSize(new java.awt.Dimension(32767, 32767));

        javax.swing.GroupLayout jdpFormDisplayLayout = new javax.swing.GroupLayout(jdpFormDisplay);
        jdpFormDisplay.setLayout(jdpFormDisplayLayout);
        jdpFormDisplayLayout.setHorizontalGroup(
            jdpFormDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 508, Short.MAX_VALUE)
        );
        jdpFormDisplayLayout.setVerticalGroup(
            jdpFormDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jdpFormDisplay.setSize((int) (screenSize.getWidth() - pnlMenu.getWidth()),
            (int) screenSize.getHeight());
        jdpFormDisplay.setPreferredSize(jdpFormDisplay.getSize());

        pnlBody.add(jdpFormDisplay);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBody, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBody, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pnlBody.setPreferredSize(screenSize.getSize());

        getAccessibleContext().setAccessibleName("Open POS | Dashboard");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtrMenuValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jtrMenuValueChanged
        dmtn = new DefaultMutableTreeNode();
        dmtn = (DefaultMutableTreeNode) jtrMenu.getLastSelectedPathComponent();
        
        if (dmtn == null) {
            return;         // exit method
        }
        
        String selectedNode = "";
        
        if (dmtn.isLeaf()) {
            JTreeNode jtn = (JTreeNode) dmtn.getUserObject();
            selectedNode = jtn.toString();
        } else {
            return;         // exit method
        }
        if("New Frame".equals(selectedNode)){
            if (jif != null) {
                jif.dispose();
            }
            
            jif = new gui.tests.TestForm();
            jif.setClosable(true);
            jif.setSize(jdpFormDisplay.getSize());
            
            jif.setVisible(true);
            
            try {
                jdpFormDisplay.add(jif);
                jif.setSelected(true);
                jtrMenu.setSelectionPath(null);
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
        System.out.println("Node Selected : " + selectedNode);
        
    }//GEN-LAST:event_jtrMenuValueChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

              Dashboard dashWindow = new Dashboard();
              dashWindow.setMinimumSize(screenSize);
              dashWindow.setVisible(true);

            }
        });
    }

    // <editor-fold defaultstate="collapsed" desc="Variables declarations">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDesktopPane jdpFormDisplay;
    private javax.swing.JTree jtrMenu;
    private javax.swing.JPanel pnlBody;
    private javax.swing.JPanel pnlMenu;
    // End of variables declaration//GEN-END:variables
    // custom variables
    private static Dimension screenSize;
    
    // custom models
    private DefaultMutableTreeNode dmtn;
    private JInternalFrame jif;
    
    // </editor-fold>
}
